name: Code Analysis

on:
  push:
  pull_request:

jobs:
  pycodestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python-lint-action
        with:
          tool-name: pycodestyle
          tool-package: pytest-pycodestyle
          pytest-args: --pycodestyle

  pyflakes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python-lint-action
        with:
          tool-name: pyflakes
          tool-package: pytest-flakes
          pytest-args: --flakes

  pydocstyle:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/python-lint-action
        with:
          tool-name: pydocstyle
          tool-package: pytest-docstyle
          pytest-args: --docstyle --docstyle-select=D101,D102,D103,D105,D106,D207,D208,D209,D210,D211,D213,D214,D215,D300,D414,D417,D418,D419
          continue-on-error: 'true'

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shellcheck-action
        with:
          shellcheck-args: -e SC1091

  publish-test-results:
    runs-on: ubuntu-latest
    needs: [pycodestyle, pyflakes, pydocstyle, shellcheck]
    if: always()
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results
          
      - name: Debug git repository
        run: |
          pwd
          ls -la
          echo "Git workspace: ${{ github.workspace }}"
          echo "Current directory: $(pwd)"
          git status || echo "Git status failed"
          git log --oneline -1 || echo "Git log failed"
          ls -la .git || echo "No .git directory found"
          
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results/**/*.xml
          check_name: Code Analysis Tests
          comment_title: Code Analysis Test Results
          fail_on: nothing
          report_individual_runs: true
          dedupe_classes_by_file_name: false
